name: Scalability Testing
on:
  workflow_dispatch:
    inputs:
      organization:
        description: 'Kestrel repo organization'
        required: true
        default: 'opencybersecurityalliance'
      repository:
        description: 'Kestrel repo name'
        required: true
        default: 'kestrel-lang'
      branch:
        description: 'Kestrel repo branch'
        required: true
        default: 'develop'
      stix-shifter-version:
        description: STIX-Shifter package version
        required: true
        default: latest

  # This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  kestrel-scalability-testing:
    runs-on: ubuntu-20.04
    env:
        venv_activate:
    steps:
      - name: Worflow Information
        run: |
          echo "Triggered by ${{ github.actor }} through a ${{ github.event_name }} event."
          echo "Running on a ${{ runner.os }} server hosted by GitHub"
          echo "Running in ${{ github.repository }} repository, ${{ github.ref }} branch."
          echo "HOME = ${HOME}"
          mkdir -p ${HOME}/fedsearchtest
      - name: Code Checkout
        uses: actions/checkout@v3
      - name: Create Virtual Environment
        run: |
          ./federated-search-core/setup/create-venv.sh
          source "$HOME/fedsearchtest/fedsearchtest/bin/activate"
          echo "venv_activate=$VIRTUAL_ENV/bin/activate" >> $GITHUB_ENV
      - name: Kestrel Code Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.inputs.organization }}/${{ github.event.inputs.repository }}
          ref: ${{ github.event.inputs.branch }}
          path: './kestrel-lang'
      - name: Install kestrel from Source Code
        run: |
          source ${{ env.venv_activate }}
          ./upper-layer-integration/kestrel/setup/install-kestrel.sh
      - name: Elasticsearch instance setup
        run: |
          source ${{ env.venv_activate }}
          ./federated-search-core/setup/elastic-ecs/install-elastic.sh
      - name: Import test data in elastic instance
        run: ./federated-search-core/setup/elastic-ecs/import-data.sh --data-indexes "win-111-winlogbeat-bh22-20220727 win-52-elasticagent-500k-benign-20230523"
      - name: Finalize and check Kestrel and Elasticsearch deployment in the test environment
        run: |
          source ${{ env.venv_activate }}
          export KESTREL_STIXSHIFTER_CONFIG=${HOME}/fedsearchtest/kestrel-stixshifter-config.yaml
          ./upper-layer-integration/kestrel/setup/deploy-kestrel.sh
      - name: Run End-to-End Scalability Tests
        run: |
          source ${{ env.venv_activate }}
          ./upper-layer-integration/kestrel/test/run-scalability-tests.sh
      - name: Cleanup
        run: |
          ./federated-search-core/setup/elastic-ecs/clean-elastic.sh
          docker network rm elastic
          rm -rf data
      - name: Job Status
        run: echo "Job status is ${{ job.status }}."